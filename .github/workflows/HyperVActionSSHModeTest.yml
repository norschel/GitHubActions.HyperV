# This is a basic workflow to help you get started with Actions

name: TestOnly_HyperVActionSSHModeTest

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted]
    env:
      sshhost: localhost
      vmname: win11test
      hostname: localhost
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5

      - uses: ./
        name: Hyper-V - StartVM
        with:
          hostname: ${{ env.hostname }}
          vmname: ${{ env.vmname }}
          command: StartVM
          startvmstatuschecktype: WaitingTime
          startvmwaittimebasedcheckinterval: 15
          sshmode: true
          sshhostname: ${{ env.sshhost }}
          sshusername: ${{ secrets.sshusername }}
          sshpassword: ${{ secrets.sshpassword }}
      - uses: ./
        name: Hyper-V - Create Checkpoint
        with:
          hostname: ${{ env.hostname }}
          vmname: ${{ env.vmname }}
          command: createcheckpoint
          checkpointname: GitHubTest
          sshmode: true
          sshhostname: ${{ env.sshhost }}
          sshusername: ${{ secrets.sshusername }}
          sshpassword: ${{ secrets.sshpassword }}
      - uses: ./
        name: Hyper-V - StopVM
        with:
          hostname: ${{ env.hostname }}
          vmname: ${{ env.vmname }}
          command: ShutdownVM
          startvmstatuschecktype: WaitingTime
          startvmwaittimebasedcheckinterval: 15
          sshmode: true
          sshhostname: ${{ env.sshhost }}
          sshusername: ${{ secrets.sshusername }}
          sshpassword: ${{ secrets.sshpassword }}
      - uses: ./
        name: Hyper-V - Remove Checkpoint
        with:
          hostname: ${{ env.hostname }}
          vmname: ${{ env.vmname }}
          command: removecheckpoint
          checkpointname: GitHubTest
          sshmode: true
          sshhostname: ${{ env.sshhost }}
          sshusername: ${{ secrets.sshusername }}
          sshpassword: ${{ secrets.sshpassword }}
